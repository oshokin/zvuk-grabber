// Code generated by MockGen. DO NOT EDIT.
// Source: tag_processor.go
//
// Generated by this command:
//
//	mockgen -source=tag_processor.go -destination=mocks/tag_processor_mock.go
//

// Package mock_zvuk is a generated GoMock package.
package mock_zvuk

import (
	context "context"
	reflect "reflect"

	zvuk "github.com/oshokin/zvuk-grabber/internal/service/zvuk"
	gomock "go.uber.org/mock/gomock"
)

// MockTagProcessor is a mock of TagProcessor interface.
type MockTagProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockTagProcessorMockRecorder
	isgomock struct{}
}

// MockTagProcessorMockRecorder is the mock recorder for MockTagProcessor.
type MockTagProcessorMockRecorder struct {
	mock *MockTagProcessor
}

// NewMockTagProcessor creates a new mock instance.
func NewMockTagProcessor(ctrl *gomock.Controller) *MockTagProcessor {
	mock := &MockTagProcessor{ctrl: ctrl}
	mock.recorder = &MockTagProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagProcessor) EXPECT() *MockTagProcessorMockRecorder {
	return m.recorder
}

// WriteTags mocks base method.
func (m *MockTagProcessor) WriteTags(ctx context.Context, req *zvuk.WriteTagsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteTags", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteTags indicates an expected call of WriteTags.
func (mr *MockTagProcessorMockRecorder) WriteTags(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteTags", reflect.TypeOf((*MockTagProcessor)(nil).WriteTags), ctx, req)
}
