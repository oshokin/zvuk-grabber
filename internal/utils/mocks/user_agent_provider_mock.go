// Code generated by MockGen. DO NOT EDIT.
// Source: user_agent_provider.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserAgentProvider is a mock of UserAgentProvider interface.
type MockUserAgentProvider struct {
	ctrl     *gomock.Controller
	recorder *MockUserAgentProviderMockRecorder
}

// MockUserAgentProviderMockRecorder is the mock recorder for MockUserAgentProvider.
type MockUserAgentProviderMockRecorder struct {
	mock *MockUserAgentProvider
}

// NewMockUserAgentProvider creates a new mock instance.
func NewMockUserAgentProvider(ctrl *gomock.Controller) *MockUserAgentProvider {
	mock := &MockUserAgentProvider{ctrl: ctrl}
	mock.recorder = &MockUserAgentProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserAgentProvider) EXPECT() *MockUserAgentProviderMockRecorder {
	return m.recorder
}

// GetUserAgent mocks base method.
func (m *MockUserAgentProvider) GetUserAgent() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserAgent")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserAgent indicates an expected call of GetUserAgent.
func (mr *MockUserAgentProviderMockRecorder) GetUserAgent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserAgent", reflect.TypeOf((*MockUserAgentProvider)(nil).GetUserAgent))
}
