# This workflow builds, tests, and releases a Go project using GitHub Actions.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Release

# Trigger conditions for the workflow
on:
  push:
    branches: ["master"] # Trigger on pushes to the 'master' branch
    tags:
      - "v*" # Trigger on tags starting with 'v' (e.g., v1.0.0)
  pull_request:
    branches: ["master"] # Trigger on pull requests targeting the 'master' branch

# Jobs define the tasks to be executed
jobs:
  # Job 1: Build and Test (runs for all commits, including PRs and non-tag pushes)
  build-and-test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the entire Git history

      # Step 2: Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable # Use the latest stable version of Go

      # Step 3: Build the Go project
      - name: Build
        run: go build -v ./... # Build the project with verbose output

      # Step 4: Run tests for the Go project
      - name: Test
        run: go test -v ./... # Run tests with verbose output

  # Job 2: Release (runs only for tags starting with 'v')
  release:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    needs: build-and-test # Ensure this job runs only after build-and-test succeeds
    if: startsWith(github.ref, 'refs/tags/v') # Only run for tags starting with 'v'
    permissions:
      contents: write # Allow writing to the repository (e.g., for creating releases)

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the entire Git history

      # Step 2: Run GoReleaser
      - name: Release
        uses: goreleaser/goreleaser-action@v6 # Use the GoReleaser GitHub Action
        with:
          args: release --clean # Run GoReleaser with the 'release --clean' command
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Authenticate with GitHub
